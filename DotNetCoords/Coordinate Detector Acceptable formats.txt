Lat/Lng 
	DMS
		123 34 42
		-123* 34' 42"
		123* 34' 42"
		+123* 34' 42"
		45* 12' 22"N
		45 12' 22"S
		90:00:00.0N

	DM - not implemented in LatLng object
		S 33 58.254 E 023 53.269

UTM
	4Q6109372363778
	1f21
	2e01928391087509127405123521353526798
	4/Q/6109372363778
	4 Q 6109372363778

Usng/Mgrs
	4QFJ1093763778
	2QFK3093763778
	2QaK3093763778
	1fgh23456789







	//some implemented

	https://gist.github.com/cgudea/7c558138cb48b36e785b#comment-1403066

dmsLatFails = ['20/60/0', '80/60/1.11', '80/59/70', '90/59/0', '86/60/1']
dmsLatMatches = ['-12/23/59.999999999999999', '-1/2/1.000234','-1:2:12.000234', 
				'0 59 0.22', '60/34/34']
dmsLonFails = ['123:60:59.99999999', '-180:12:0', '180:60:0', 
				'700 50 50.11', '23/79/22.22', 
				'0 60 2.2', '0 60 0']
dmsLonMatches = ['-179/59/0.23', '127/12/12.223', '-180/0/0', 
				'179:59:59.99999999', '-59:13:58.22212345', 
				'0:0:2.3', '127 12 12.333', '180 0 0', '-0 0 0.00001']
 
# decimal test data
decimalFails = ["323.312.0", "ABC", "abc", "2.a23", "e2.31", "123-213", "-123e", "180.1", "-190", "-200.1"]
decimalMatches = ["-22.311", "-12", "-170", "28.324125", "179.0111111111111", "13", "-100.0"]
 
# mgrs test data
mgrsMatches = ["4QFJ1093763778", "2QFK3093763778", "2QaK3093763778", "1fgh23456789"]
mgrsFails = ["QFJ1093763778", "4QFJ109373778", "123a", "12.4.41"]

# regular expressions (all the magic)
dmsLatRegEx = '^-?((90\/[0]{0,}\/[0]{0,}$)|([1-8]?\d))(\/|\:|\ )(([1-5]?\d))(\/|\:|\ )[1-5]?\d(\.\d{0,})?$'
dmsLonRegEx = '^-?((180(\/|\:| )0(\/|\:| )0((\.0{0,})?))|(([1]?[1-7]\d)|\d?\d)(\/|\:| )([1-5]?\d)(\/|\:| )[1-5]?\d(\.\d{0,})?$)'
decimalRegEx = "^-?(180((\.0{0,})?)|([1]?[0-7]?\d(\.\d{0,})?))$"
mgrsRegEx = "^\d{1,2}[^ABIOYZabioyz][A-Za-z]{2}([0-9][0-9])+$"
utmRegEx = "^\d(\/|\:| |)[^aboiyzABOIYZ\d\[-\` -@](\/|\:| |)\d{2,}$"
 